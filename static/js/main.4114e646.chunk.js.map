{"version":3,"sources":["store/api/index.js","store/api/findLocationByLatLng.js","store/api/findWeatherById.js","store/api/getDroneData.js","store/actions.js","store/sagas/Weather.js","store/sagas/ApiErrors.js","store/sagas/DroneData.js","store/sagas/index.js","store/reducers/Weather.js","store/reducers/Drone.js","components/Weather.js","components/Header.js","components/Wrapper.js","components/Test.js","components/MyMap.js","components/DroneLocation.js","components/DroneInfo.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["api","findLocationByLatLng","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","latitude","longitude","latlon","response","json","wrap","_context","prev","next","join","fetch","concat","sent","ok","abrupt","error","code","status","data","stop","_x","_x2","apply","this","arguments","findWeatherbyId","id","getDroneData","FETCH_WEATHER","API_ERROR","WEATHER_DATA_RECEIVED","WEATHER_ID_RECEIVED","FETCH_DRONE","DRON_DATA_RECEIVED","watchWeatherIdReceived","watchFetchWeather","watchAppLoad","action","call","API","put","type","actions","cancel","_marked","_ref2","location","_context2","console","log","woeid","_marked2","_context3","all","takeEvery","_marked3","sagas_Weather","apiErrorReceived","watchApiError","toast","ApiErrors_marked","ApiErrors_marked2","ApiErrors","watchFetchDrone","DroneData_marked","DroneData_marked2","DroneData","sagas","toConsumableArray","WeatherSagas","initialState","loading","weatherId","name","temperature","weather_state_name","handlers","_handlers","defineProperty","state","objectSpread","c","weather","consolidated_weather","the_temp","latt_long","title","_latt_long$split","split","_latt_long$split2","slicedToArray","temperatureinCelsius","temperatureinFahrenheit","reducers_Weather","length","undefined","handler","metric","metricsData","Drone_handlers","l","Drone","Chip","withStyles","theme","root","background","palette","secondary","main","label","color","primary","ChipRaw","Weather","props","onLoad","_this$props","react_default","createElement","LinearProgress_default","Weather_Chip","Component","connect","ownProps","_state$weather","dispatch","grow","flexGrow","classes","AppBar_default","position","Toolbar_default","Typography_default","variant","className","components_Weather","wrapper","height","children","CardHeader","CardHeaderRaw","Test","_this","interval","setInterval","clearInterval","map","line","timestamp","Date","toLocaleTimeString","Card_default","card","Test_CardHeader","CardContent_default","es6","width","margin","top","right","bottom","left","dataKey","stroke","strokeDasharray","domain","drone","MyMap","withScriptjs","withGoogleMap","defaultProps","center","lat","lng","zoom","react_google_maps_lib","defaultCenter","defaultZoom","parseFloat","DroneLocation","DroneLocation_CardHeader","components_MyMap","googleMapURL","loadingElement","style","containerElement","mapElement","_state$drone","Avatar","AvatarRaw","DroneInfo","minWidth","DroneInfo_CardHeader","List_default","ListItem_default","DroneInfo_Avatar","ListItemText_default","mlatitude","store","rootReducer","combineReducers","weatherReducer","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","createStore","forEach","run","createMuiTheme","typography","useNextVariants","App","styles","CssBaseline_default","react_redux_es","components_Wrapper","components_Header","display","flexWrap","alignItems","justifyContent","components_DroneLocation","components_Test","components_DroneInfo","lib","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4114e646.chunk.js","sourcesContent":["import findLocationByLatLng from \"./findLocationByLatLng\";\r\nimport findWeatherbyId from \"./findWeatherById\";\r\nimport getDroneData from \"./getDroneData\";\r\n\r\nexport default {\r\n  findLocationByLatLng,\r\n  findWeatherbyId,\r\n  getDroneData\r\n};\r\n","import \"isomorphic-fetch\";\r\n\r\nconst findLocationByLatLong = async (latitude, longitude) => {\r\n  const latlon = [latitude, longitude].join(\",\");\r\n  // Using the create-react-app's proxy for CORS issues\r\n  const response = await fetch(\r\n    `https://react-assessment-api.herokuapp.com/api/weather/location/search/?lattlong=${latlon}`\r\n  );\r\n  if (!response.ok) {\r\n    return { error: { code: response.status } };\r\n  }\r\n  const json = await response.json();\r\n  return { data: json };\r\n};\r\n\r\nexport default findLocationByLatLong;\r\n","import \"isomorphic-fetch\";\r\n\r\nconst findWeatherbyId = async id => {\r\n  // Using the create-react-app's proxy for CORS issues\r\n  const response = await fetch(\r\n    `https://react-assessment-api.herokuapp.com/api/weather/location/${id}/`\r\n  );\r\n  if (!response.ok) {\r\n    return { error: { code: response.status } };\r\n  }\r\n  const json = await response.json();\r\n  return { data: json };\r\n};\r\n\r\nexport default findWeatherbyId;\r\n","import \"isomorphic-fetch\";\r\n\r\n\r\nconst getDroneData = async () => {\r\n  // Using the create-react-app's proxy for CORS issues\r\n  const response = await fetch(\r\n    'https://react-assessment-api.herokuapp.com/api/drone'\r\n  );\r\n  if (!response.ok) {\r\n    return { error: { code: response.status } };\r\n  }\r\n  const json = await response.json();\r\n  return { data: json };\r\n};\r\n\r\nexport default getDroneData;\r\n","export const FETCH_WEATHER = \"COMMAND/FETCH_WEATHER_FOR_LAT_LNG\";\r\nexport const API_ERROR = \"EVENT/API_ERROR_RECEIVED\";\r\nexport const WEATHER_DATA_RECEIVED = \"EVENT/WEATHER_DATA_RECEIVED\";\r\nexport const WEATHER_ID_RECEIVED = \"EVENT/WEATHER_ID_RECEIVED\";\r\nexport const FETCH_DRONE = 'COMMAND/FETCH_DRONE';\r\nexport const DRON_DATA_RECEIVED = \"EVENT/DRON_DATA_RECEIVED\";\r\n","import { takeEvery, call, put, cancel, all } from \"redux-saga/effects\";\r\nimport API from \"../api\";\r\nimport * as actions from \"../actions\";\r\n\r\n/*\r\n  1. The weather service requires us to make a search by lat/lng to find its\r\n  weather ID.\r\n  2. We then use that weather ID to get the weather.\r\n\r\n  This process is pretty well defined here with a saga.\r\n\r\n  call invokes a method\r\n  put dispatches an action\r\n  takeEvery watches actions and executes a function\r\n\r\n  Also -- the `*` in function is important; turns it into a \"generator\"\r\n\r\n*/\r\n\r\nfunction* watchWeatherIdReceived(action) {\r\n  const { id } = action;\r\n  const { error, data } = yield call(API.findWeatherbyId, id);\r\n  if (error) {\r\n    yield put({ type: actions.API_ERROR, code: error.code });\r\n    yield cancel();\r\n    return;\r\n  }\r\n  yield put({ type: actions.WEATHER_DATA_RECEIVED, data });\r\n}\r\n\r\nfunction* watchFetchWeather(action) {\r\n  const { latitude, longitude } = action;\r\n  const { error, data } = yield call(\r\n    API.findLocationByLatLng,\r\n    latitude,\r\n    longitude\r\n  );\r\n  if (error) {\r\n    console.log({ error });\r\n    yield put({ type: actions.API_ERROR, code: error.code });\r\n    yield cancel();\r\n    return;\r\n  }\r\n  const location = data[0] ? data[0].woeid : false;\r\n  if (!location) {\r\n    yield put({ type: actions.API_ERROR });\r\n    yield cancel();\r\n    return;\r\n  }\r\n  yield put({ type: actions.WEATHER_ID_RECEIVED, id: location });\r\n}\r\n\r\nfunction* watchAppLoad() {\r\n  yield all([\r\n    takeEvery(actions.FETCH_WEATHER, watchFetchWeather),\r\n    takeEvery(actions.WEATHER_ID_RECEIVED, watchWeatherIdReceived)\r\n  ]);\r\n}\r\n\r\nexport default [watchAppLoad];\r\n","import { takeEvery, call } from \"redux-saga/effects\";\r\nimport * as actions from \"../actions\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction* apiErrorReceived(action) {\r\n  yield call(toast.error, `Error Received: ${action.code}`);\r\n}\r\n\r\nfunction* watchApiError() {\r\n  yield takeEvery(actions.API_ERROR, apiErrorReceived);\r\n}\r\n\r\nexport default [watchApiError];\r\n","import { takeEvery, call, put, cancel, all } from \"redux-saga/effects\";\r\nimport API from \"../api\";\r\nimport * as actions from \"../actions\";\r\n\r\n/*\r\n  1. The weather service requires us to make a search by lat/lng to find its\r\n  weather ID.\r\n  2. We then use that weather ID to get the weather.\r\n\r\n  This process is pretty well defined here with a saga.\r\n\r\n  call invokes a method\r\n  put dispatches an action\r\n  takeEvery watches actions and executes a function\r\n\r\n  Also -- the `*` in function is important; turns it into a \"generator\"\r\n\r\n*/\r\n\r\nfunction* watchFetchDrone(action) {\r\n  const { error, data } = yield call(\r\n    API.getDroneData\r\n  );\r\n  if (error) {\r\n    console.log({ error });\r\n    yield put({ type: actions.API_ERROR, code: error.code });\r\n    yield cancel();\r\n    return;\r\n  }\r\n  yield put({ type: actions.DRON_DATA_RECEIVED,\r\n    data: data\r\n  });\r\n}\r\n\r\nfunction* watchAppLoad() {\r\n  yield all([\r\n    takeEvery(actions.FETCH_DRONE, watchFetchDrone)\r\n    ]);\r\n}\r\n\r\nexport default [watchAppLoad];\r\n","import WeatherSagas from \"./Weather\";\r\nimport ApiErrors from \"./ApiErrors\";\r\nimport DroneData from \"./DroneData\";\r\n\r\nexport default [...ApiErrors, ...WeatherSagas, ...DroneData];\r\n","import * as actions from \"../actions\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  weatherId: null,\r\n  name: \"\",\r\n  temperature: \"\",\r\n  weather_state_name: \"\",\r\n  latitude: null,\r\n  longitude: null,\r\n  data: {}\r\n};\r\n\r\nconst toF = c => (c * 9) / 5 + 32;\r\n\r\nconst startLoading = (state, action) => {\r\n  return { ...state, loading: true };\r\n};\r\n\r\nconst weatherIDReceived = (state, action) => {\r\n  return { ...state, weatherId: action.id };\r\n};\r\n\r\nconst weatherDataRecevied = (state, action) => {\r\n  const { data } = action;\r\n  if (!data[\"consolidated_weather\"]) return state;\r\n  const weather = data.consolidated_weather[0];\r\n  const { weather_state_name, the_temp } = weather;\r\n  const { latt_long, title: name } = data;\r\n  const [latitude, longitude] = latt_long.split(\",\");\r\n\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    latitude,\r\n    longitude,\r\n    temperatureinCelsius: the_temp,\r\n    temperatureinFahrenheit: toF(the_temp),\r\n    weather_state_name,\r\n    name,\r\n    data: action.data\r\n  };\r\n};\r\n\r\nconst handlers = {\r\n  [actions.FETCH_WEATHER]: startLoading,\r\n  [actions.WEATHER_ID_RECEIVED]: weatherIDReceived,\r\n  [actions.WEATHER_DATA_RECEIVED]: weatherDataRecevied\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const handler = handlers[action.type];\r\n  if (typeof handler === \"undefined\") return state;\r\n  return handler(state, action);\r\n};\r\n","import * as actions from \"../actions\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  latitude: null,\r\n  longitude: null,\r\n  metric: null,\r\n  metricsData: [],\r\n};\r\n\r\nconst startLoading = (state, action) => {\r\n\r\n  return { ...state, loading: true };\r\n};\r\n\r\nconst droneDataReceived = (state, action) => {\r\n\r\n  const { data } = action.data;\r\n  let l = data.length - 1;\r\n\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    metric: data[l].metric,\r\n    latitude: data[l].latitude,\r\n    longitude: data[l].longitude,\r\n    metricsData: data\r\n  };\r\n};\r\n\r\nconst handlers = {\r\n  [actions.FETCH_DRONE]: startLoading,\r\n  [actions.DRON_DATA_RECEIVED]: droneDataReceived\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const handler = handlers[action.type];\r\n  if (typeof handler === \"undefined\") return state;\r\n  return handler(state, action);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport ChipRaw from \"@material-ui/core/Chip\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst cardStyles = theme => ({\r\n  root: {\r\n    background: theme.palette.secondary.main\r\n  },\r\n  label: {\r\n    color: theme.palette.primary.main\r\n  }\r\n});\r\nconst Chip = withStyles(cardStyles)(ChipRaw);\r\n\r\nclass Weather extends Component {\r\n  componentDidMount() {\r\n    this.props.onLoad();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      name,\r\n      weather_state_name,\r\n      temperatureinFahrenheit\r\n    } = this.props;\r\n    if (loading) return <LinearProgress />;\r\n    return (\r\n      <Chip\r\n        label={`Weather in ${name}: ${weather_state_name} and ${temperatureinFahrenheit}°`}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const {\r\n    loading,\r\n    name,\r\n    weather_state_name,\r\n    temperatureinFahrenheit\r\n  } = state.weather;\r\n  return {\r\n    loading,\r\n    name,\r\n    weather_state_name,\r\n    temperatureinFahrenheit\r\n  };\r\n};\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onLoad: () =>\r\n    dispatch({\r\n      type: actions.FETCH_WEATHER,\r\n      longitude: -95.3698,\r\n      latitude: 29.7604\r\n    })\r\n});\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(Weather);\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Weather from \"./Weather\";\r\nconst styles = {\r\n  grow: {\r\n    flexGrow: 1\r\n  }\r\n};\r\n\r\nconst Header = props => {\r\n  const { classes } = props;\r\n\r\n  const name = \"Rovshen Paltayev's\";\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n          {name} EOG React Visualization Assessment\r\n        </Typography>\r\n        <Weather />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  wrapper: {\r\n    background: theme.palette.background.main,\r\n    height: \"100vh\"\r\n  }\r\n});\r\n\r\nconst Wrapper = props => {\r\n  const { classes } = props;\r\n  return <div className={classes.wrapper}>{props.children}</div>;\r\n};\r\n\r\nexport default withStyles(styles)(Wrapper);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeaderRaw from '@material-ui/core/CardHeader';\r\nimport Card from '@material-ui/core/Card';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip\r\n} from 'recharts';\r\n\r\nconst cardStyles = theme => ({\r\n  root: {\r\n    background: theme.palette.primary.main\r\n  },\r\n  title: {\r\n    color: 'white'\r\n  }\r\n});\r\n\r\nconst CardHeader = withStyles(cardStyles)(CardHeaderRaw);\r\n\r\nconst styles = {\r\n  card: {\r\n    margin: '1% 1%'\r\n    // width: '700px',\r\n    // height: '500px'\r\n  }\r\n};\r\n\r\nconst convertToHours = timestamp => {\r\n  const ts = new Date(timestamp);\r\n  return ts.toLocaleTimeString();\r\n};\r\n\r\nclass Test extends Component {\r\n  componentDidMount() {\r\n    this.props.onLoad();\r\n    this.interval = setInterval(() => {\r\n      this.props.onLoad();\r\n    }, 2000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n  render() {\r\n    const { metricsData, classes } = this.props;\r\n    const data = metricsData.map(line => {\r\n    return {\r\n        timestamp: convertToHours(line['timestamp']),\r\n        metric: line['metric']\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Card className={ classes.card }>\r\n          <CardHeader title=\"RealTime Graphical Visualization of Drone's Temp\" />\r\n          <CardContent>\r\n            <LineChart\r\n              width={650}\r\n              height={400}\r\n              data={data}\r\n              margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n              <Line type=\"monotone\" dataKey=\"metric\" stroke=\"black\" />\r\n              <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"1 1\" />\r\n              <XAxis dataKey={'timestamp'} />\r\n              <YAxis type=\"number\" domain={['dataMax - 200', 'auto']} />\r\n              <Tooltip />\r\n            </LineChart>\r\n          </CardContent>\r\n        </Card>\r\n      </div>);\r\n  }\r\n}\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const {\r\n    metricsData\r\n  } = state.drone;\r\n  return {\r\n    metricsData\r\n  };\r\n};\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onLoad: () =>\r\n    dispatch({\r\n      type: actions.FETCH_DRONE\r\n    })\r\n});\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(withStyles(styles)(Test));\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker\r\n} from 'react-google-maps';\r\n\r\n\r\nconst MyMap = withScriptjs(\r\n  withGoogleMap(({ latitude, longitude }) => {\r\n    const defaultProps = {\r\n      center: {\r\n        lat: 31.11,\r\n        lng: -100\r\n      },\r\n      zoom: 4\r\n    };\r\n    return (\r\n      <Card>\r\n        <GoogleMap\r\n          defaultCenter={defaultProps.center}\r\n          defaultZoom={defaultProps.zoom}>\r\n          <Marker\r\n            position={{ lat: parseFloat(latitude), lng: parseFloat(longitude) }}\r\n          />\r\n        </GoogleMap>\r\n      </Card>\r\n    );\r\n  })\r\n);\r\n\r\nexport default MyMap;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeaderRaw from '@material-ui/core/CardHeader';\r\nimport Card from '@material-ui/core/Card';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport MyMap from './MyMap';\r\n\r\nconst cardStyles = theme => ({\r\n  root: {\r\n    background: theme.palette.primary.main\r\n  },\r\n  title: {\r\n    color: 'white'\r\n  }\r\n});\r\n\r\nconst CardHeader = withStyles(cardStyles)(CardHeaderRaw);\r\n\r\nconst styles = {\r\n  card: {\r\n    margin: '1% 1%'\r\n    // width: '700px',\r\n    // height: '500px'\r\n  }\r\n};\r\n\r\n\r\nclass DroneLocation extends Component {\r\n  componentDidMount() {\r\n    this.props.onLoad();\r\n    this.interval = setInterval(() => {\r\n      this.props.onLoad();\r\n    }, 2000);\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n  render() {\r\n    const {classes, latitude, longitude } = this.props;\r\n    return (\r\n      <div>\r\n        <Card className={ classes.card }>\r\n          <CardHeader title=\"RealTime Graphical Visualization of Drone's Temp\" />\r\n          <CardContent>\r\n            <MyMap\r\n              latitude={latitude}\r\n              longitude={longitude}\r\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCSrmQ2sJuZJGraZ3RYVGtqDaykygpVA6g&v=3.exp&libraries=geometry,drawing,places\"\r\n              loadingElement={<div style={{ width: '100%', height: '100%' }} />}\r\n              containerElement={\r\n                <div style={{ width: '650px', height: '400px' }} />\r\n              }\r\n              mapElement={<div style={{ width: '100%', height: `100%` }} />}\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </div>);\r\n  }\r\n}\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const {\r\n    latitude,\r\n    longitude\r\n  } = state.drone;\r\n  return {\r\n    latitude,\r\n    longitude\r\n  };\r\n};\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onLoad: () =>\r\n    dispatch({\r\n      type: actions.FETCH_DRONE\r\n    })\r\n});\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(withStyles(styles)(DroneLocation));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../store/actions\";\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeaderRaw from '@material-ui/core/CardHeader';\r\nimport Card from '@material-ui/core/Card';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AvatarRaw from '@material-ui/core/Avatar';\r\n\r\nconst cardStyles = theme => ({\r\n  root: {\r\n    background: theme.palette.primary.main\r\n  },\r\n  title: {\r\n    color: 'white'\r\n  }\r\n});\r\n\r\nconst CardHeader = withStyles(cardStyles)(CardHeaderRaw);\r\n\r\nconst avatarStyles = theme => ({\r\n  root: {\r\n    background: theme.palette.primary.main\r\n  },\r\n  title: {\r\n    color: 'white'\r\n  }\r\n});\r\nconst Avatar = withStyles(avatarStyles)(AvatarRaw);\r\n\r\nconst styles = {\r\n  card: {\r\n    margin: '1% 1%'\r\n    // width: '700px',\r\n    // height: '500px'\r\n  }\r\n};\r\n\r\nclass DroneInfo extends Component {\r\n    componentDidMount() {\r\n        this.props.onLoad();\r\n        this.interval = setInterval(() => {\r\n          this.props.onLoad();\r\n        }, 2000);\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n  render() {\r\n    const { latitude, longitude, metric, classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Card\r\n        className={classes.card}\r\n        style={{ minWidth: '700px', height: '500px' }}>\r\n        <CardHeader title=\"RealTime Information of the Drone\" />\r\n        <CardContent>\r\n          <List>\r\n            <ListItem>\r\n              <Avatar>1</Avatar>\r\n              <ListItemText\r\n                primary={`Temperature: ${metric || '249.20709327988456'}`}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <Avatar>2</Avatar>\r\n              <ListItemText\r\n                primary={`Latitude: ${latitude || '28.492074543952448'}`}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <Avatar>3</Avatar>\r\n              <ListItemText\r\n                primary={`Longitude: ${longitude || '-95.4928720669904'}`}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <Avatar>4</Avatar>\r\n              <ListItemText primary={'Last Received: 2 seconds ago'} />\r\n            </ListItem>\r\n          </List>\r\n        </CardContent>\r\n      </Card>\r\n      </div>);\r\n  }\r\n};\r\n\r\nconst mapState = (state, ownProps) => {\r\n  const {\r\n    mlatitude,\r\n    longitude,\r\n    metric\r\n  } = state.drone;\r\n  return {\r\n    mlatitude,\r\n    longitude,\r\n    metric\r\n  };\r\n};\r\n\r\nconst mapDispatch = dispatch => ({\r\n  onLoad: () =>\r\n    dispatch({\r\n      type: actions.FETCH_DRONE\r\n    })\r\n});\r\n\r\nexport default connect(\r\n  mapState,\r\n  mapDispatch\r\n)(withStyles(styles)(DroneInfo));\r\n","import React from \"react\";\r\nimport createStore from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Header from \"./components/Header\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Test from \"./components/Test\";\r\nimport DroneLocation from \"./components/DroneLocation\";\r\nimport DroneInfo from \"./components/DroneInfo\";\r\n\r\nconst store = createStore();\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: \"rgb(39,49,66)\"\r\n    },\r\n    secondary: {\r\n      main: \"rgb(197,208,222)\"\r\n    },\r\n    background: {\r\n      main: \"rgb(226,231,238)\"\r\n    }\r\n  }\r\n});\r\n\r\nconst App = props => (\r\n  <MuiThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <Provider store={store}>\r\n      <Wrapper>\r\n        <Header />\r\n        <div\r\n          style={{\r\n              display: 'flex',\r\n              flexWrap: 'wrap',\r\n              alignItems: 'center',\r\n              justifyContent: 'space-around'\r\n            }}>\r\n          <DroneLocation />\r\n          <Test/>\r\n          <DroneInfo/>\r\n        </div>\r\n        <ToastContainer />\r\n      </Wrapper>\r\n    </Provider>\r\n  </MuiThemeProvider>\r\n);\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport sagas from \"./sagas\";\r\nimport weatherReducer from \"./reducers/Weather\";\r\nimport drone from \"./reducers/Drone\";\r\n\r\nexport default () => {\r\n  const rootReducer = combineReducers({\r\n    weather: weatherReducer,\r\n    drone: drone\r\n  });\r\n\r\n  const composeEnhancers = composeWithDevTools({});\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = applyMiddleware(sagaMiddleware);\r\n  const store = createStore(rootReducer, composeEnhancers(middlewares));\r\n\r\n  sagas.forEach(sagaMiddleware.run);\r\n\r\n  return store;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}